/**
 * BNO055 IMU Driver
 * 
 * @file bno0555.h
 * @author Marcus Behel
 */

#include <util.h>
#include <stdint.h>
#include <stdbool.h>


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define BNO055_AXIS_REMAP_P0        0
#define BNO055_AXIS_REMAP_P1        1
#define BNO055_AXIS_REMAP_P2        2
#define BNO055_AXIS_REMAP_P3        3
#define BNO055_AXIS_REMAP_P4        4
#define BNO055_AXIS_REMAP_P5        5
#define BNO055_AXIS_REMAP_P6        6
#define BNO055_AXIS_REMAP_P7        7


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Typedefs
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct {
    float grav_x, grav_y, grav_z;
    float euler_pitch, euler_roll, euler_yaw;
} bno055_data;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Globals
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern i2c_trans bno055_trans;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Functions
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Initialize BNO055
 */
void bno055_init(void);

/**
 * Call from main when i2c transaction done
 */
void bno055_i2c_done(void);

/**
 * Call from main when delay done
 */
void bno055_delay_done(void);

/**
 * Get current IMU data
 */
bno055_data bno055_get(void);

/**
 * Check if BNO055 IMU connected
 */
bool bno055_connected(void);


// TODO: Remove this and debug the actual problem
void bno055_fix_stuck(void);