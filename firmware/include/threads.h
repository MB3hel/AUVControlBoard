#pragma once

#include <FreeRTOS.h>
#include <task.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Task configuration
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Stack sizes
#define TASK_USB_DEVICE_SSIZE               (192)                               // This is size used in CDC-MSC example
#define TASK_COMMUNICATE_SSIZE              (configMINIMAL_STACK_SIZE)

// Task priorities
#define TASK_USB_DEVICE_PRIORITY            (configMAX_PRIORITIES - 1)          // Must happen quickly for TUSB to work
#define TASK_COMMUNICATE_PRIORITY           (configMAX_PRIORITIES - 2)          // Must handle usb data quickly
                                                                                // Handling commands from PC is critical
// TODO: Task to handle sensor data will be lower priority

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  Task Handles
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern TaskHandle_t task_usb_device_handle;
extern TaskHandle_t task_communicate_handle;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Thread management
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void threads_init(void);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
